# Import libraries
import pandas as pd
import networkx as nx
import matplotlib.pyplot as plt

# Read the Seoul Subway Station dataset from a CSV file into a pandas DataFrame
Network = pd.read_csv('Seoul Subway Stations.csv')
# Create an empty graph using NetworkX to represent the subway network
MyGraph = nx.Graph()

# Add subway stations as nodes to the graph
for _, row in Network.iterrows():
    # Extract station details from the CSV file
    station = row['Station']
    latitude = row['Latitude']
    longitude = row['Longitude']
    line = row['Line']
    distance = row['Distance']
    # Add station node to the graph, storing station attributes
    MyGraph.add_node(station, pos=(longitude, latitude), line=line, latitude=latitude, longitude=longitude, distance=distance)
    # Display station names near their positions
    plt.text(longitude + 0.001, latitude - 0.002, station, fontsize=6)


# Create edges between stations with distances from the CSV file
for line, line_data in Network.groupby('Line'):
    stations = line_data['Station'].tolist()
    for station1, station2, distance in zip(stations, stations[1:], line_data['Distance'].iloc[1:]):
        MyGraph.add_edge(station1, station2, line=line, distance=distance)

# Create a function to visualize the subway network graph
def visualize_graph(graph, pos, node_colors, edge_colors):
    # Draw nodes, edges, and labels with colors and attributes
    nx.draw(graph, pos, node_color=node_colors, node_size=10, edge_color=edge_colors, font_size=6)

    #Display edge distances between stations in km
    edge_labels = {(u, v): f"{graph.edges[(u, v)]['distance']:.1f} km" for u, v in graph.edges}
    nx.draw_networkx_edge_labels(graph, pos, edge_labels=edge_labels, font_size=5)

# Define colors for subway lines
line_colors = ['b', 'g', 'r', 'y', 'k']
line_to_color = {line: color for line, color in zip(Network['Line'].unique(), line_colors)}
# Assign edge and node colors based on subway lines
edge_colors = [line_to_color[MyGraph.edges[edge]['line']] for edge in MyGraph.edges]
node_colors = [line_to_color[MyGraph.nodes[node]['line']] for node in MyGraph.nodes]
# Get positions of nodes for plotting
pos = nx.get_node_attributes(MyGraph, 'pos')
visualize_graph(MyGraph, pos, node_colors, edge_colors)
# Create a legend to describe the lines of the graph
unique_lines = Network['Line'].unique()
for line in unique_lines:
    color = line_to_color[line]  # Retrieve color for the current line
    plt.plot([], [], marker='o', color=color, label=line)  # Plot line colors
    plt.text(0, 0, line, fontsize=6)  # Add label text for the legend


# Display the legend showing subway lines with represented colors
plt.legend()
# Plot the title and the subway network
plt.title('Seoul Metropolitan Subway Network Map')
plt.show()
